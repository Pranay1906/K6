name: Feature Branch Workflow

on:
  push:
    branches-ignore:
      - 'master'
jobs: 

  run_unit_tests:
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven  

      - name: Run unit tests
        run: mvn test -Dtest=CalculatorControllerCalculationTests

  run_coverage:
    runs-on: ubuntu-latest
    #needs: run_unit_tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
         
      - name: Calculate code coverage
        run: mvn jacoco:report "-DskipTests" "-Ddependency-check.skip=true"
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: target/site/jacoco/
          retention-days: 7

  scan_dependency:
    runs-on: ubuntu-latest
    #needs: run_coverage
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Cache OWASP Dependency Check Data
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
            ~/.dependency-check
          key: ${{ runner.os }}-owasp-data-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-owasp-data-

      - name: Owasp Dependency Check
        run: mvn dependency-check:check

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: |
            target/dependency-check-report.html
            target/dependency-check-report.xml

      
  super-lint:
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven  

      - name: Run Super Linter
        run: mvn test -Dtest=CalculatorControllerCalculationTests

  build:
    runs-on: ubuntu-latest
    needs: [super-lint,scan_dependency,run_unit_tests,run_coverage]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
         
      - name: Build with Maven
        run: mvn clean install "-DskipTests" "-Djacoco.skip=true" "-Ddependency-check.skip=true"
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy_feature:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: java-app

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'playground1'
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0BEA4837F01F4E4D9BCEE1ADAE79D999 }}
        package: '*.jar'

    - name: Display downloaded files
      run: ls -R          

  run_RestA_Tests:
        runs-on: ubuntu-latest  
        needs: deploy_feature
        steps:
          - uses: actions/checkout@v2
          - name: Set up JDK 11
            uses: actions/setup-java@v2
            with:
              java-version: '11'
              distribution: 'temurin'
              cache: maven  
    
          - name: Run unit tests
            run: mvn test -Dtest="com.rest.*Tests"

          - name: Generate Surefire Report
            run: mvn surefire-report:report

          - name: Upload Surefire HTML Report
            uses: actions/upload-artifact@v2
            with:
              name: surefire-reports
              path: target/site/surefire-report.html

  postman_tests:
    runs-on: ubuntu-latest
    needs: deploy_feature    
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install newman
        run: npm install -g newman

      - name: Install newman-reporter-html
        run: npm install -g newman-reporter-html

      - name: Run Postman tests
        run: newman run ${{ github.workspace }}/src/test/Postman_Tests/Calculate.postman_collection.json -r html --reporter-html-export report.html

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: postman-report
          path: report.html


# name: Feature Branch Workflow

# on:
#   push:
#     branches-ignore:
#       - 'master'
# jobs: 

#   run_unit_tests:
#     runs-on: ubuntu-latest  
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'temurin'
#           cache: maven  

#       - name: Run unit tests
#         run: mvn test -Dtest=!com.SeleniumTest

#   run_coverage:
#     runs-on: ubuntu-latest
#     #needs: run_unit_tests
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'temurin'
#           cache: maven
         
#       - name: Calculate code coverage
#         run: mvn jacoco:report "-DskipTests" "-Ddependency-check.skip=true"
#       - name: Archive code coverage results
#         uses: actions/upload-artifact@v2
#         with:
#           name: code-coverage-report
#           path: target/site/jacoco/
#           retention-days: 7

#   scan_dependency:
#     runs-on: ubuntu-latest
#     #needs: run_coverage
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'temurin'
#           cache: maven

#       - name: Cache OWASP Dependency Check Data
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.m2
#             ~/.dependency-check
#           key: ${{ runner.os }}-owasp-data-${{ hashFiles('**/pom.xml') }}
#           restore-keys: |
#             ${{ runner.os }}-owasp-data-

#       - name: Owasp Dependency Check
#         run: mvn dependency-check:check

#       - name: Upload Dependency Check Report
#         uses: actions/upload-artifact@v2
#         with:
#           name: dependency-check-report
#           path: |
#             target/dependency-check-report.html
#             target/dependency-check-report.xml

      
#   super-lint:
#     runs-on: ubuntu-latest
#     #needs: scan_dependency
#     steps:
#       - name: Checkout repository code
#         uses: actions/checkout@v2

#       - name: Run Super-Linter
#         uses: github/super-linter@v4
#         continue-on-error: true
#         env:
#           DEFAULT_BRANCH: main
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           FILTER_REGEX_EXCLUDE: '^target/.*' 

#       - name: Upload Dependency Check Report
#         uses: actions/upload-artifact@v2
#         if: always()
#         with:
#           name: superlinter logs         
#           path: .superlinter/**/*

#   build:
#     runs-on: ubuntu-latest
#     needs: [super-lint,scan_dependency,run_unit_tests,run_coverage]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'temurin'
#           cache: maven
         
#       - name: Build with Maven
#         run: mvn clean install "-DskipTests" "-Djacoco.skip=true" "-Ddependency-check.skip=true"
#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v2
#         with:
#           name: java-app
#           path: '${{ github.workspace }}/target/*.jar'